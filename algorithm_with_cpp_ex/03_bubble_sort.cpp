// 문제 : 다음 숫자 들을 오름차순으로 정렬하시오
// 1, 10, 5, 8, 7, 6, 4, 3, 2, 9

// 버블 정렬 : 가까이에 있는 두 숫자를 비교해서, 더 작거나 큰 값을 앞으로 보낸다.
// 효율성이 가장 떨어진다

// 뒤에 있는 원소가 줄어드는 방식으로 수행한다.
// 버블 정렬이 선택 정렬 보다는 느리게 동작한다.
// 이유는 계속 값을 변경해주며, 연산이 계속 일어나기 때문

// 10 + 9 + .. + 1 의 비교
// 10 * (10+1) / 2 = 55
// 55번의 비교 연산을 하게 된다
// ==> N * (N + 1) / 2
// ==> O(N ^ 2) 		

#include <stdio.h>
int main(void)
{
	int i, j, temp;
	int arr[10] = {1, 10, 5, 8, 7, 6, 4, 3, 2, 9};
	
	for(i = 0; i < 10; i++)
	{
		for(j = 0; j < 9-i; j++)
		{
			if(arr[j] > arr[j+1])
			{
				temp = arr[j];
				arr[j] = arr[j+1];
				arr[j+1] = temp;
			}
		}
	}
	
	for(i=0; i<10; i++)
	{
		printf("%d ", arr[i]);
	}
	
	return 0;
}